spring:
  application:
    name: finance-forecast-app

# Transition note:
# This project currently uses H2 for all profiles (dev/test/prod).
# To switch to PostgreSQL later, uncomment the corresponding sections below
# and set DB_USERNAME/DB_PASSWORD environment variables as needed.

---
spring:
  config:
    activate:
      on-profile: dev
  datasource:
    url: jdbc:h2:mem:ffadb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    driver-class-name: org.h2.Driver
    username: ${DB_USERNAME:sa}
    password: ${DB_PASSWORD:}
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        session_events.log.LOG_QUERIES_SLOWER_THAN_MS: 200
        generate_statistics: true
  h2:
    console:
      enabled: true
      path: /h2-console
      settings:
        web-allow-others: true
  flyway:
    enabled: true
    locations: classpath:db/migration

# PostgreSQL (future) - dev
#spring:
#  config:
#    activate:
#      on-profile: dev
#  datasource:
#    url: jdbc:postgresql://localhost:5432/financeapp
#    driver-class-name: org.postgresql.Driver
#    username: ${DB_USERNAME:postgres}
#    password: ${DB_PASSWORD:postgres}
#  jpa:
#    hibernate:
#      ddl-auto: validate
#    show-sql: false
#  flyway:
#    enabled: true
#    locations: classpath:db/migration

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,threaddump,env
  endpoint:
    health:
      show-details: always
  health:
    db:
      enabled: true
  metrics:
    tags:
      application: ${spring.application.name}
  prometheus:
    metrics:
      export:
        enabled: true

server:
  port: 8080
  error:
    whitelabel:
      enabled: false
    include-message: always
    include-binding-errors: always
    include-stacktrace: never

logging:
  level:
    root: INFO
    org.springframework: INFO
    com.financeapp: DEBUG
  pattern:
    level: "%5p [cid:%X{correlationId}]"

# JWT Configuration
app:
  jwt:
    secret: ${JWT_SECRET:finance-forecast-app-super-secret-key-for-jwt-token-generation-2024}
    expiration: ${JWT_EXPIRATION:86400000} # 24 hours in milliseconds
    refresh-expiration: ${JWT_REFRESH_EXPIRATION:604800000} # 7 days in milliseconds

# Security Configuration
security:
  cors:
    allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:3000,http://localhost:8080}
    allowed-methods: GET,POST,PUT,DELETE,OPTIONS,PATCH
    allowed-headers: "*"
    allow-credentials: true
    max-age: 3600

---
spring:
  config:
    activate:
      on-profile: test
  mvc:
    throw-exception-if-no-handler-found: true
  web:
    resources:
      add-mappings: false
  datasource:
    url: jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1
    driver-class-name: org.h2.Driver
    username: ${DB_USERNAME:sa}
    password: ${DB_PASSWORD:}
  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: false
    properties:
      hibernate:
        jdbc:
          time_zone: UTC
        session_events.log.LOG_QUERIES_SLOWER_THAN_MS: 200
        generate_statistics: true
  flyway:
    enabled: false
    locations: classpath:db/migration
  data:
    jpa:
      repositories:
        enabled: true
      auditing:
        enabled: false

# PostgreSQL (future) - test
#spring:
#  config:
#    activate:
#      on-profile: test
#  datasource:
#    url: jdbc:postgresql://localhost:5432/financeapp_test
#    driver-class-name: org.postgresql.Driver
#    username: ${DB_USERNAME:postgres}
#    password: ${DB_PASSWORD:postgres}
#  jpa:
#    hibernate:
#      ddl-auto: validate
#    show-sql: false
#  flyway:
#    enabled: true
#    locations: classpath:db/migration

---
spring:
  config:
    activate:
      on-profile: integration-test
  datasource:
    driver-class-name: org.testcontainers.jdbc.ContainerDatabaseDriver
    url: jdbc:tc:postgresql:16:///financeapp?TC_TMPFS=/var/lib/postgresql/data:rw
    hikari:
      maximum-pool-size: 8
      minimum-idle: 2
      idle-timeout: 60000
      max-lifetime: 300000
      connection-timeout: 30000
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        jdbc:
          time_zone: UTC
        session_events.log.LOG_QUERIES_SLOWER_THAN_MS: 200
        generate_statistics: true
  flyway:
    enabled: true
    locations:
      - classpath:db/migration
      - classpath:db/postgresql

---
spring:
  config:
    activate:
      on-profile: prod
  datasource:
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:financeapp}?sslmode=${DB_SSLMODE:require}
    driver-class-name: org.postgresql.Driver
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:postgres}
    hikari:
      maximum-pool-size: 30
      minimum-idle: 5
      idle-timeout: 600000
      max-lifetime: 1800000
      connection-timeout: 30000
      pool-name: FinanceAppHikariPool
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        session_events.log.LOG_QUERIES_SLOWER_THAN_MS: 500
        generate_statistics: true
  flyway:
    enabled: true
    locations:
      - classpath:db/migration
      - classpath:db/postgresql

server:
  port: 8080
  shutdown: graceful
  forward-headers-strategy: native

spring:
  lifecycle:
    timeout-per-shutdown-phase: 30s


---
spring:
  config:
    activate:
      on-profile: staging
  datasource:
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:financeapp_staging}
    driver-class-name: org.postgresql.Driver
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:postgres}
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      idle-timeout: 300000
      max-lifetime: 1200000
      connection-timeout: 30000
      pool-name: FinanceAppHikariPoolStaging
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        session_events.log.LOG_QUERIES_SLOWER_THAN_MS: 400
        generate_statistics: true
  flyway:
    enabled: true
    locations:
      - classpath:db/migration
      - classpath:db/postgresql
