name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

permissions:
  contents: write
  packages: write
  id-token: write
  actions: read
  security-events: write

env:
  NODE_VERSION: '18.20.0'
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  lint:
    name: Lint and Type Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Diagnostic: Node & environment
        run: |
          echo "Node version:" && node --version || true
          echo "NPM version:" && npm --version || true
          echo "Workspace listing:" && ls -la || true

      - name: Install dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Upload npm debug logs (if npm ci fails)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: npm-debug-logs-lint
          path: /home/runner/.npm/_logs/**/*.log

      - name: Run ESLint
        working-directory: ./frontend
        run: npm run lint

      - name: Run TypeScript check
        working-directory: ./frontend
        run: npm run type-check

      - name: Check formatting
        working-directory: ./frontend
        run: npm run format:check

  # ... rest of your workflow unchanged ...
